name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "v3-refactor" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - run: npm ci
      - name: Generate license, formats and build project
        env:
          GIT_COMMIT: ${{ github.sha }}
          BUILD_DATE: ${{ github.event.repository.updated_at}}
        run: |
          npm run generate-license
          npm run generate-formats
          npm run parcel-build

      - name: Remove not needed files from build
        run: |
          rm -rf ./dist/formats/github
          rm -rf ./dist/formats/_build
          rm -rf ./dist/formats/.editorconfig
          rm -rf ./dist/formats/.git
          rm -rf ./dist/formats/.gitattributes
          rm -rf ./dist/formats/.gitmodules
          rm -rf ./dist/formats/CONTRIBUTING.md
          rm -rf ./dist/formats/README.md

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist


  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4